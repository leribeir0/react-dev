{"version":3,"sources":["services/api.ts","assets/logo.svg","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx"],"names":["api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","css","shade","Repos","div","Error","span","Dashboard","React","useState","storageRepos","localStorage","getItem","JSON","parse","repos","setRepos","newRepo","setNewRepo","inputError","setInputError","formEl","useRef","event","a","preventDefault","get","response","repository","data","current","reset","useEffect","setItem","stringify","src","logo","alt","ref","Boolean","onSubmit","placeholder","onChange","target","value","type","map","index","to","full_name","owner","avatar_url","login","description","size"],"mappings":"+GAAA,8CAEaA,EAFb,OAEmBC,EAAMC,OAAO,CAC5BC,QAAS,4B,gCCHE,QAA0B,kC,sICO5BC,EAAQC,IAAOC,GAAV,6IAQLC,EAAOF,IAAOG,KAAV,2rBAcP,SAAAC,GAAK,OAAIA,EAAMC,UAAYC,YAAlB,0EAqBaC,YAAM,GAAK,YAK9BC,EAAQR,IAAOS,IAAV,y6BAkDLC,EAAQV,IAAOW,KAAV,4F,uCCXHC,UA9Ea,WAC1B,MAA0BC,IAAMC,UAA6B,WAC3D,IAAMC,EAAeC,aAAaC,QAAQ,+BAE1C,OAAIF,EACKG,KAAKC,MAAMJ,GAEb,MANT,mBAAOK,EAAP,KAAcC,EAAd,KASA,EAA8BR,IAAMC,SAAS,IAA7C,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAAoCV,IAAMC,SAAS,IAAnD,mBAAOU,EAAP,KAAmBC,EAAnB,KACMC,EAASb,IAAMc,OAA+B,MAZpB,4CAwBhC,WAA6BC,GAA7B,mBAAAC,EAAA,yDACED,EAAME,iBACDR,EAFP,uBAGIG,EAAc,6BAHlB,mDAQ2B9B,IAAIoC,IAAJ,gBAAmCT,IAR9D,OAQUU,EARV,OASUC,EAAaD,EAASE,KAC5Bb,EAAS,GAAD,mBAAKD,GAAL,CAAYa,KACpB,UAAAP,EAAOS,eAAP,SAAgBC,QAChBb,EAAW,IACXE,EAAc,IAblB,kDAeIA,EAAc,yBAflB,2DAxBgC,sBA2ChC,OA7BAZ,IAAMwB,WAAU,WACdrB,aAAasB,QAAQ,8BAA+BpB,KAAKqB,UAAUnB,MAClE,CAACA,IA4BF,qCACE,qBAAKoB,IAAKC,IAAMC,IAAI,kBACpB,cAAC3C,EAAD,6CAEA,eAACG,EAAD,CACEyC,IAAKjB,EACLrB,SAAUuC,QAAQpB,GAClBqB,SAnD0B,4CAgD5B,UAII,uBAAOC,YAAY,2BAA2BC,SAhCtD,SAA2BnB,GACzBL,EAAWK,EAAMoB,OAAOC,UAgClB,wBAAQC,KAAK,SAAb,uBAGH1B,GAAc,cAACd,EAAD,UAAQc,IAEvB,cAAChB,EAAD,UACGY,EAAM+B,KAAI,SAAClB,EAAYmB,GAAb,OACT,eAAC,IAAD,CAAMC,GAAE,wBAAmBpB,EAAWqB,WAAtC,UAEE,qBACEd,IAAKP,EAAWsB,MAAMC,WACtBd,IAAKT,EAAWsB,MAAME,QAExB,gCACE,iCAASxB,EAAWqB,YACpB,4BAAIrB,EAAWyB,iBAEjB,cAAC,IAAD,CAAiBC,KAAM,OATlB1B,EAAWqB,UAAYF","file":"static/js/dahboard.9a5ce5e5.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n    baseURL: 'https://api.github.com',\n});\n","export default __webpack_public_path__ + \"static/media/logo.ef8dccb6.svg\";","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n    hasError: boolean;\n}\n\nexport const Title = styled.h1`\n    font-size: 48px;\n    color: #3a3a3a;\n    max-width: 450px;\n    line-height: 56px;\n    margin-top: 80px;\n`;\n\nexport const Form = styled.form<FormProps>`\n    margin-top: 40px;\n    max-width: 700px;\n    display: flex;\n\n    input{\n        flex: 1;\n        height: 70px;\n        padding: 0 24px;\n        border: 2x solid #fff;\n        border-radius: 5px 0px 0px 5px;\n        color: #3a3a3a;\n        border-right: 0;\n\n        ${props => props.hasError && css`\n            border-color: #c53030;\n        `}\n\n        &::placeholder{\n            color: #a8a8b3;\n        }\n    }\n\n    \n\n    button{\n        width: 160px;\n        background-color: #04d361;\n        border-radius: 0px 5px 5px 0px;\n        border: 0;\n        color: #fff;\n        font-weight: bold;\n        transition: background-color 0.2s;\n\n        &:hover{\n            background-color: ${shade(0.2, '#04d361')};\n        }\n    }\n`;\n\nexport const Repos = styled.div`\n    margin-top: 80px;\n    max-width: 700px;\n\n    a{\n        background: #fff;\n        border-radius: 5px;\n        width: 100%;\n        padding: 24px;\n        display: flex;\n        align-items: center;\n        transition: transform 0.2s;\n\n        &:hover{\n            transform: translateX(6px);\n        }\n\n        & + a {\n            margin-top: 16px;\n        }\n\n        img{\n            width: 64px;\n            height: 64px;\n            border-radius: 50%50%;\n        }\n\n        div{\n            margin: 0 16px;\n            flex: 1;\n\n            strong{\n                font-size: 20px;\n                color: #3d3d4d\n            }\n\n            p{\n                font-size: 18px;\n                color: #a8a8b3;\n                margin-top: 4px;\n            }\n        }\n\n        svg {\n            margin-left: auto;\n            color: #cbcbd6\n        }\n    }\n`;\n\nexport const Error = styled.span`\n    display: block;\n    color: #c53030;\n    margin-top: 8px;\n`;","import React from 'react';\nimport { Title, Form, Repos, Error } from './styles';\nimport { api } from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport { FiChevronsRight } from 'react-icons/fi';\nimport logo from '../../assets/logo.svg';\n\ninterface githubRepository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [repos, setRepos] = React.useState<githubRepository[]>(() => {\n    const storageRepos = localStorage.getItem('@GitCollection:repositories');\n\n    if (storageRepos) {\n      return JSON.parse(storageRepos);\n    }\n    return [];\n  });\n\n  const [newRepo, setNewRepo] = React.useState('');\n  const [inputError, setInputError] = React.useState('');\n  const formEl = React.useRef<HTMLFormElement | null>(null);\n\n  React.useEffect(() => {\n    localStorage.setItem('@GitCollection:repositories', JSON.stringify(repos));\n  }, [repos]);\n\n\n\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setNewRepo(event.target.value);\n  }\n\n  async function handleAddRepo(event: React.FormEvent<HTMLFormElement>): Promise<void> {\n    event.preventDefault();\n    if (!newRepo) {\n      setInputError('Input username/repository');\n      return;\n    }\n\n    try{\n      const response = await api.get<githubRepository>(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepos([...repos, repository]);\n      formEl.current?.reset();\n      setNewRepo('');\n      setInputError('');\n    } catch {\n      setInputError('Repository not found!');\n    }\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"GitCollection\" />\n      <Title>Repository Catalog From Github</Title>\n\n      <Form \n        ref={formEl} \n        hasError={Boolean(inputError)} \n        onSubmit={handleAddRepo}>\n          <input placeholder=\"username/repository_name\" onChange={handleInputChange} />\n          <button type=\"submit\">Search</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repos>\n        {repos.map((repository, index) => (\n          <Link to={`/repositories/${repository.full_name}`}\n            key={repository.full_name + index}>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronsRight size={20} />\n          </Link>\n        ))}\n      </Repos>\n    </>\n  );\n};\n\nexport default Dashboard;"],"sourceRoot":""}